<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--configuration 中标签 的放置顺序"
(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,
objectWrapperFactory?,reflectorFactory?,plugins?,environments?,
databaseIdProvider?,mappers?)".-->
<configuration>

<!--    引入properties文件，使用${key}的方式访问value-->
    <properties resource="jdbc.properties"/>

<!--    为具体的类型起别名，就可以在mybatis的范围中用别名指代这个类型-->
    <typeAliases>
        <!-- typeAlias
        type 具体类型的全类名，
        alias 起的别名
        如果不设置  alias 的值 拥有个默认的别名 类名《===不区分大小写  USER user User 等都可
        可以有多个别名
        -->
        <typeAlias type="com.hu.pojo.User"/>
        <typeAlias type="com.hu.pojo.User" alias="User"/>
        <typeAlias type="com.hu.pojo.User" alias="U"/>
        <!--以包为单位设置别名 ,包下的每一个类都有默认的别名-->
        <package name="com.hu.pojo"/>
    </typeAliases>
<!--   default 默认的开发环境 -->
    <environments default="development">
        <environment id="development">
            <!--
            （1）type为"JDBC"时，使用JdbcTransaction管理事务。
            （2）type为"managed"时，使用ManagedTransaction管理事务（也就是交由外部容器管理）-->
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

    </environments>

<!--    引入mybatis的映射文件-->
    <mappers>
<!--        <mapper resource="com/hu/mapper/UserMapper.xml"/>-->

        <!--
        使用动态代理，实现dao层接口
            以包的方式引入映射文件
            条件：
            ··  （1） mapper接口和映射文件的包名必须一致
                （2） mapper接口和映射文件的名字必须一致
                即两者”全类名“一致
                (3) mapper接口和映射文件的返回值与参数也相同


         -->
        <package name="com.hu.mapper"/>
    </mappers>


</configuration>
